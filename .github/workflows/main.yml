name: Update Version on PR

on:
  pull_request:
    types: [opened, reopened, synchronize, edited]

jobs:
  update_version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get last PR title
        id: last_pr
        run: |
          latest_pr_title=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls?state=closed&sort=updated&direction=desc&per_page=1" | jq -r '.[0].title')
          echo "::set-output name=last_pr_title::$latest_pr_title"

      - name: Extract version from last PR title
        id: extract_version
        run: |
          last_pr_title="${{ steps.last_pr.outputs.last_pr_title }}"
          version=$(echo "$last_pr_title" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
          if [[ -z "$version" ]]; then
            version="1.0.0"
          fi
          echo "::set-output name=version::$version"

      - name: Extract PR title and labels
        id: pr_info
        run: |
          echo "::set-output name=title::$(jq -r '.pull_request.title' $GITHUB_EVENT_PATH)"
          echo "::set-output name=labels::$(jq -r '.pull_request.labels[].name' $GITHUB_EVENT_PATH)"

      - name: Update version and PR title
        run: |
          # Récupérer le titre de la PR et les labels
          title="${{ steps.pr_info.outputs.title }}"
          labels="${{ steps.pr_info.outputs.labels }}"
          
          # Récupérer la dernière version de la PR
          version="${{ steps.extract_version.outputs.version }}"

          # Vérifier si les mots-clés sont présents dans le titre
          if [[ $title == *"Majeur"* ]]; then
            version=$(echo $version | awk -F. '{$1++} 1' OFS=.)
          fi
          if [[ $title == *"Mineur"* ]]; then
            version=$(echo $version | awk -F. '{$2++} 1' OFS=.)
          fi
          if [[ $title == *"Patch"* ]]; then
            version=$(echo $version | awk -F. '{$3++} 1' OFS=.)
          fi

          # Mettre à jour le titre de la PR avec la nouvelle version
          new_title="$version - $title"
          echo "::set-output name=new_title::$new_title"

          - name: Update PR title
            if: steps.pr_info.outputs.title != steps.new_title.outputs.new_title
            run: |
              new_title="${{ steps.new_title.outputs.new_title }}"
              pr_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
              curl -X PATCH \
                -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                -H "Content-Type: application/json" \
                -d "{\"title\": \"$new_title\"}" \
                "https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls/${pr_number}"
